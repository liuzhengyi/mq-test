// readme.text
// 2013-05-13
// liuzhengyi

0. 本damon展示一个简单的消息分发系统，具体架构设计参见structure.text；
1. 本damon基于rabbitmq和PHP amqp 扩展，相关安装参考见install_amqp_rabbitmq，rabbitmq配置采用默认配置，可以暂不修改；
2. 本damon使用receive.php生成一条消息放入队列; 使用distribute.php对队列的中的消息进行分发处理，分别分发给pull.php和push.php；push.php模拟负责将消息推送至用户处，pull.php模拟负责将消息写入缓存或数据库等待用户来轮询。事实上push.php和pull.php只是将模拟的执行过程记录到push.log和pull.log中。
2. 执行$php test.php 10 可以产生10条消息并放入rabbitmq server，默认产生9条消息，输出运行时间
3. 执行$php distribute.php 可以逐条消化队列中的消息；
4. 消化消息时，每条消息发送给10个默认用户，起动10个处理进程进行发送，不输出运行时间，运行信息写入push.log和pull.log，此程序需要手工终止。

05-15
使用：
安装好rabbitmq-server和php的amqp扩展之后：
1. 运行control/init.sh；	// 生成vhost和用户并设定用户权限
2. 运行control/init.php；	// 生成交换机和队列并建立绑定

3. 运行receive_msg.php 100；	// 产生100条消息并入队列
4. 运行distribute_task.php 10；	// 将队列中的消息并行发给10个用户，该程序会阻塞，需要手动结束之
5. 重复3,4，改变参数，观察执行时间。入列的时间会直接输出到控制台，处理的时间记录在push.log里，需要手动查看并计算，最好随时清空push.log
6. 重复3,4时，可以通过cp push-curlpost.php push.php的方式改变模拟处理消息的方式

7. 执行control/destory.sh；	// 删除vhost和用户，vhost删除后，队列和交换机也就不存在了
