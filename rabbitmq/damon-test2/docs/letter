关于消息回应和消息重发的问题：

我把代码放到github上了，地址是 https://github.com/liuzhengyi/mq-test 。我刚开始用github，请老师多指导。

现在damon-test2中在使用你上次让我看的改进的curl_multi_exec。
对每条消息起一个curl_multi_exec，负责这条消息的所有发送。
即，
如果有10消息，100个接收者，则一共起10个curl_multi_exec()，每个curl_multi_exec()负责将一条消息批量发送100次。
如果有100条消息，10个接收者，则一共其100个curl_multi_exec()，每个curl_multi_exec()负责将一条消息批量发送10次。
这两种情况，虽然总的请求数都是1000次，但耗时却不一样，调用curl_multi_exec()次数少的那种情况快一些。
但总体上来说，和之前相比，效率高了很多。
请求时间也和每条请求的超时时间有关。具体情况参见测试数据 /mq-test/rabbitmq/docs/test_result.text
另外，通过启动多个分发程序，并行分发，可以在一定程度上提高效率。

这里我遇到的问题主要有：
1. 为了保证消息不丢失 。消息接收者收到消息后需要回应一个ack，消息发送者如果一段时间内没有收到ack，则认为消息丢失，将重发该条消息，重发若干次依然没有收到ack时，停止发送，将这个事件和消息写入数据库。
请问，这么处理合理吗？有没有更好的处理方案？

2. 消息接收者需要自己处理重复消息，即接收者可能收到两条一模一样的消息。发送端会对消息进行唯一标识。这样做合理吗？

