// 2013-05-22
// liuzhengyi
// structure of damon-test4

实现功能：
	用户发消息到前端HTTP代理，前端HTTP代理判断消息合法性并将消息放入队列1；然后启动一个或多个worker1；
	worker1从队列1中取消息，判断该消息接收者，从数据库中取出消息的接收者列表以及注册的接收方式；循环处理接收者。
暂时留空模块：
	合法性判断模块；
	权限控制模块；
    写数据库模块；
需要讨论的问题：
    以client为基本单位，则每个参与进来的client都需要一个token_salt，是否需要client_name？client如何识别其他的clients？
	是否需要用队列存储每个消息的接收者？
	消息需要指定自己的expire time？
	token的具体实现
    priority的设计

程序命名：
	前端代理：receive_msg.php
		接收GET或POST方式消息
	队列1：total_msg_queue
		存放合法消息
	worker1：distribute_task.php
		从queue1中取消息和应该得到该消息的用户列表，然后分发给推送程序或轮询程序
	推送程序： push_curl_xmpost($curl_msgs, $conf_curl_timeout, &$result)
		尝试将一组消息推送至客户端，返回推送结果true表示成功，false表示失败
	//轮询程序：pull.php
	//	将数据写入缓存，等待client来询问，若长期未询问则丢弃或写入数据库


消息构成：

	token: dynamic token
	from: client id/name
	priority:[h|m|l]
	body:	within 100 characters
	timestamp: UNIX timestamp
    type:   JSON|Serial|XML
    ttl:    0+

数据库中存储的信息：

	client信息：
		id, (name), push_address, token_salt
	message信息：
		from_id, channel, msg_body, expire_time, timestamp, ttl, priority, type
    channel信息：
        channel_id, owner, push_list, 

系统流程：
    client到server注册，登记push_address；
    server给client分配一个token_salt，和clientID；
    client创建一个channel，channel中有一个接收者列表(记录client_id)，server返回channelID；
    client使用token_salt将消息体加密然后发送到server；
    server的前端代理将消息解析，判断合法性，然后放入队列；
    server的后端代理从队列中取消息，读数据库获得接收者列表，然后将消息分发给列表中的用户，如果失败则记录该事件。
    client收到消息后验证合法性，然后回复ack给server。

client可以做的事情
    注册；
    创建自己的channel；
    修改自己的channel；
    删除自己的channel；
    向拥有权限的channel发送消息；
    申请加入一个channel的接收者列表；
    接收消息；


// 
